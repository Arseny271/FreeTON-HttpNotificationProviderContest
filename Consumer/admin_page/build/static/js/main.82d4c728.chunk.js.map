{"version":3,"sources":["api/methods.ts","api/api.ts","stores/config-store.ts","utils/language-utils.tsx","components/informs/loading.tsx","components/inputs/input-v2.tsx","components/buttons/button.tsx","pages/auth.tsx","components/navigation/sidebar.tsx","components/informs/icon.tsx","components/navigation/sidebar-button.tsx","components/navigation/header.tsx","components/containers/dropdown-container.tsx","components/containers/qrcode-container.tsx","pages/admin/providers.tsx","pages/admin/consumers.tsx","pages/admin/settings.tsx","pages/admin/messages.tsx","pages/admin.tsx","app.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultConverter","data","getDataConverter","RECEIVER_API_METHODS","path","type","convertQuery","convertResult","needSendAccessToken","ApiWrapper","url","methodsMap","accessToken","needRemember","apiUrl","this","loadTokens","login","password","callMethod","then","result","updateTokens","token","removeTokens","window","location","reload","fastCheckAuth","undefined","methodName","params","method","fetchMethod","status","apiResult","ApiMethodCallResult","ApiMethodCallError","retryCount","fetch","response","a","json","error","Promise","resolve","reject","setTimeout","params_","keys","Object","pathWithVariables","split","map","param","i","index","indexOf","splice","join","bodyParams","key","pathParams","createUrlParams","methodUrl","fullRequestPath","requestParams","headers","createFetchHeaders","redirect","body","formdata","JSON","stringify","localStorage","setItem","getUserStorage","storage","getItem","removeItem","sessionStorage","length","encodeURIComponent","Headers","append","console","Error","log","hostname","ApiReceiverManager","ConfigStore","consumers","providers","loading","makeObservable","observable","deep","update","action","runInAction","MAPS","auth","incorrect","sidebar","statistics","messages","settings","LanguageContext","React","createContext","lang","set","LanguageProvider","props","useState","setLang","Provider","value","children","useLanguage","useContext","LoadingAnimation","className","style","display","hidden","InputV2","forwardRef","ref","placeholder","onClick","onChange","valid","autoComplete","name","id","defaultValue","inputProps","assign","otherProps","errorLabel","Button","link","to","text","PageAuth","language","loginRef","useRef","passwordRef","current","catch","alert","NavigationSidebar","Fragment","isClose","onClose","Icon","iconProps","isHidden","backgroundColor","iconColor","WebkitMaskImage","WebkitMaskSize","iconSize","WebkitMaskPosition","iconPosition","SidebarButton","match","useRouteMatch","isActive","activeClassName","draggable","icon","buttons","subbuttons","SidebarButtonList","buttonProps","Header","onOpenSidebar","DropdownContainer","setStyle","newStyle","firstChild","height","offsetHeight","onHeaderClick","header","QrCodeContainer","qrCodeRef","downloadable","width","size","svgEls","getElementsByTagName","svgCode","outerHTML","urlData","URL","createObjectURL","Blob","svgImage","document","createElement","position","top","appendChild","onload","canvas","canvasCtx","getContext","drawImage","clientWidth","clientHeight","imgData","toDataURL","download","href","click","removeChild","src","ProviderSettingRow","inject","observer","configStore","providerId","providerSettings","setHidden","e","provider_id","stopPropagation","alt","description","version","address","public_key","PageAdminProviders","urlRef","setLoading","_providerUrl","providerUrl","slice","providerConfig","provider","finally","ConsumerSettingRuleBlock","hash","rule","saveLoading","setSaveLoading","removeLoading","setRemoveLoading","secretRef","secret","forward","forwardHex","secretHex","rules","ConsumerSettingRow","consumerSettings","pkeyRef","skeyRef","providerSelectRef","secret_key","consumerPkey","consumerSkey","consumer","PageAdminConsumers","hashRef","consumerHash","PageAdminSettingsAuth","newLoginRef","newPasswordRef","oldPasswordRef","new_login","new_password","old_password","setAccessToken","PageAdminSettings","PageAdminMessages","setMessages","useEffect","message","Date","date","toString","user","notification","dst","value_dec","PageAdmin","close","setClose","checkAuth","res","render","from","App","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","stores","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82d4c728.chunk.js","sourcesContent":["interface ApiMethod {\r\n  readonly name?: string;\r\n  readonly path: string;\r\n  readonly type: string;\r\n  readonly needSendAccessToken?: boolean;\r\n  readonly url?: string;\r\n  readonly convertQuery: (params: any) => any;\r\n  readonly convertResult: (result: any) => any;\r\n}\r\n\r\nfunction defaultConverter(data: any): any { return data; }\r\nfunction getDataConverter(data: any): any { return data; }\r\n\r\nconst RECEIVER_API_METHODS: {\r\n  [key: string]: ApiMethod;\r\n} = {\r\n  \"admin.auth.login\": {path:\"admin/auth/login\",type:\"POST\",convertQuery:defaultConverter,convertResult:getDataConverter},\r\n  \"admin.auth.logout\": {path:\"admin/auth/logout\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n  \"admin.auth.check\": {path:\"admin/auth/check\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n  \"admin.auth.change\": {path:\"admin/auth/change\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n\r\n  \"receiver.config.providers.add\":{path:\"admin/config/providers/add\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n  \"receiver.config.providers.remove\":{path:\"admin/config/providers/remove\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n\r\n  \"receiver.config.consumers.add\":{path:\"admin/config/consumers/add\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n  \"receiver.config.consumers.update\":{path:\"admin/config/consumers/update\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n  \"receiver.config.consumers.remove\":{path:\"admin/config/consumers/remove\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n\r\n  \"receiver.config.rules.add\":{path:\"admin/config/rules/add\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n  \"receiver.config.rules.update\":{path:\"admin/config/rules/update\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n  \"receiver.config.rules.remove\":{path:\"admin/config/rules/remove\",type:\"POST\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n\r\n  \"receiver.messages.get\": {path:\"admin/messages/get\",type:\"GET\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter},\r\n\r\n  \"receiver.config.get\": {path:\"admin/config\",type:\"GET\",needSendAccessToken:true,convertQuery:defaultConverter,convertResult:getDataConverter}\r\n}\r\n\r\nexport { RECEIVER_API_METHODS }\r\nexport type { ApiMethod }\r\n","import type { ApiMethod } from \"./methods\";\r\nimport { RECEIVER_API_METHODS } from \"./methods\"\r\n\r\ninterface AnyObject {[key: string]: any}\r\ninterface FetchResult {\r\n  status: number;\r\n  result: AnyObject;\r\n}\r\n\r\nclass ApiWrapper {\r\n  private methodsMap: any;\r\n  private accessToken: string | null;\r\n  private needRemember: boolean;\r\n  readonly apiUrl: string;\r\n\r\n  constructor(url: string, methodsMap: any) {\r\n    this.methodsMap = methodsMap;\r\n    this.apiUrl = url;\r\n    this.loadTokens();\r\n  }\r\n\r\n  /* Public functions */\r\n\r\n  public async login(login: string, password: string, needRemember: boolean): Promise<ApiMethodCallResult<any>> {\r\n    return this.callMethod<any>(\"admin.auth.login\", {login, password}).then((result) => {\r\n      this.updateTokens(result.data.token, needRemember);\r\n      return result;\r\n    })\r\n  }\r\n\r\n  public async logout(): Promise<ApiMethodCallResult<any>> {\r\n    return this.callMethod<any>(\"admin.auth.logout\", {}).then((result) => {\r\n      this.removeTokens();\r\n      this.accessToken = null;\r\n      window.location.reload();\r\n      return result;\r\n    })\r\n  }\r\n\r\n  public async checkAuth(): Promise<boolean> {\r\n    if (!this.fastCheckAuth())\r\n      return false;\r\n\r\n    return this.callMethod(\"admin.auth.check\", {}).then(() => true, () => {\r\n      this.removeTokens();\r\n      window.location.reload();\r\n      return false;\r\n    });\r\n  }\r\n\r\n  public fastCheckAuth(): boolean {\r\n    return (this.accessToken !== null && this.accessToken !== undefined);\r\n  }\r\n\r\n  public async callMethod<T>(methodName: string, params: AnyObject, needRetry: boolean = true): Promise<ApiMethodCallResult<T>> {\r\n    const method: ApiMethod = this.methodsMap[methodName];\r\n    return this.fetchMethod(method, params).then(\r\n      (result: FetchResult) => {\r\n        const resultCodeGroup: number = (result.status / 100 | 0);\r\n        if (resultCodeGroup === 2) {\r\n          const apiResult: any = method.convertResult(result.result);\r\n          return new ApiMethodCallResult<T>(result.status, apiResult);\r\n        } /*else if (resultCodeGroup === 4 && needRetry) {\r\n          if ((result.result.message === \"jwt expired\" || result.result.name === \"UnauthorizedError\") && method.needSendAccessToken) {\r\n            return this.callRefreshToken().then(\r\n              () => this.callMethod(methodName, params, false),\r\n              () => {throw new ApiMethodCallError(result.status, result.result, method)}\r\n            );\r\n          }\r\n        }*/\r\n\r\n        throw new ApiMethodCallError(result.status, result.result, method);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /*\r\n   * Returns the result of a direct call to the server\r\n   * can repeat the request in case of failure\r\n   */\r\n\r\n  private fetchMethod(method: ApiMethod, params: AnyObject, retryCount: number = 5): Promise<FetchResult> {\r\n    return this.fetch(method, params).then(\r\n      async (response) => {\r\n        let result: AnyObject;\r\n        try {\r\n          result = await response.json();\r\n        } catch {\r\n          result = {}\r\n        }\r\n        const status: number = response.status;\r\n        return {status, result};\r\n      },\r\n      (error) => {\r\n        if (retryCount > 1)\r\n          return new Promise((resolve, reject) => setTimeout(() => resolve(null), 1000))\r\n            .then(() => this.fetchMethod(method, params, retryCount - 1))\r\n        throw new ApiMethodCallError(0, {error}, method);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n  /*\r\n   * Returns the result of contacting the server\r\n   */\r\n\r\n  private fetch(method: ApiMethod, params_: AnyObject): Promise<any> {\r\n    const params = method.convertQuery(params_);\r\n    const keys: string[] = Object.keys(params);\r\n    const pathWithVariables: string = method.path.split(\":\").map((param, i) => {\r\n      if (i % 2 === 1) {\r\n        const index = keys.indexOf(param);\r\n        if (index > -1) {\r\n          keys.splice(index, 1);\r\n          return params[param];\r\n        }\r\n      }\r\n      return param;\r\n    }).join(\"\");\r\n\r\n    const bodyParams: any = {};\r\n    for (let key of keys)\r\n      bodyParams[key] = params[key];\r\n\r\n    const pathParams: string = (method.type === \"GET\")?\r\n      this.createUrlParams(bodyParams):\"\";\r\n\r\n\r\n    const methodUrl = method.url?method.url:this.apiUrl;\r\n    const fullRequestPath: string = `${methodUrl}${pathWithVariables}${pathParams}`\r\n    const requestParams: any = {\r\n      headers: this.createFetchHeaders(method, bodyParams),\r\n      method: method.type,\r\n      redirect: \"follow\"\r\n    }\r\n\r\n    if (method.type !== \"GET\")\r\n      requestParams.body = bodyParams.formdata ? bodyParams.formdata : JSON.stringify(bodyParams);\r\n\r\n    return fetch(fullRequestPath, requestParams);\r\n  }\r\n\r\n  public setAccessToken(accessToken: string) {\r\n    this.updateTokens(accessToken, this.needRemember);\r\n  }\r\n\r\n  /* Private functions */\r\n\r\n  private updateTokens(accessToken: string, needRemember: boolean) {\r\n    this.accessToken = accessToken;\r\n    this.needRemember = needRemember;\r\n\r\n    localStorage.setItem(\"storage\", needRemember?\"local\":\"session\");\r\n    this.getUserStorage().setItem(\"accessToken\", accessToken);\r\n  }\r\n\r\n  private loadTokens() {\r\n    const storage: string | null = localStorage.getItem(\"storage\");\r\n    if (storage === null) return;\r\n\r\n    this.needRemember = storage === \"local\";\r\n    this.accessToken = this.getUserStorage().getItem(\"accessToken\");\r\n  }\r\n\r\n  private removeTokens() {\r\n    localStorage.removeItem(\"storage\")\r\n    localStorage.removeItem(\"accessToken\")\r\n    sessionStorage.removeItem(\"accessToken\")\r\n  }\r\n\r\n  private getUserStorage(): any {\r\n    return this.needRemember?\r\n      localStorage:sessionStorage;\r\n  }\r\n\r\n  private createUrlParams(params: AnyObject): string {\r\n    if (Object.keys(params).length === 0) return \"\";\r\n    return `?${Object.keys(params).map((key) =>\r\n      `${key}=${encodeURIComponent(params[key])}`).join(\"&\")}`\r\n  }\r\n\r\n  protected createFetchHeaders(method: ApiMethod, params: any): Headers {\r\n    const headers: Headers = new Headers();\r\n    if (!params.formdata) headers.append(\"Content-Type\", \"application/json\");\r\n\r\n    if (method.needSendAccessToken)\r\n      headers.append(\"Authorization\", `${this.accessToken}`);\r\n\r\n    return headers;\r\n  }\r\n}\r\n\r\nclass ApiMethodCallResult<T> {\r\n  constructor(status: number, data: T) {\r\n    this.status = status;\r\n    this.type = status / 100 | 0;\r\n    this.data = data;\r\n  }\r\n\r\n  readonly status: number;\r\n  readonly type: number;\r\n  readonly data: T;\r\n}\r\n\r\nclass ApiMethodCallError extends Error {\r\n  constructor(status: number, data: AnyObject, method: ApiMethod) {\r\n      super(\"Ошибка вызова метода\");\r\n      this.status = status;\r\n      this.method = method;\r\n      this.type = status / 100 | 0;\r\n      this.data = data;\r\n      console.error(this);\r\n  }\r\n\r\n  readonly method: ApiMethod;\r\n  readonly status: number;\r\n  readonly type: number;\r\n  readonly data: AnyObject;\r\n}\r\n\r\nconsole.log(window.location.hostname === \"localhost\"?\r\n\"http://ton-callback.arsenicum12.ru:8001/\":\"/\");\r\n\r\n\r\nconst ApiReceiverManager: ApiWrapper = new ApiWrapper(window.location.hostname === \"localhost\"?\r\n  \"http://ton-callback.arsenicum12.ru:8001/\":\"/\", RECEIVER_API_METHODS);\r\n\r\nexport { ApiReceiverManager }\r\nexport { ApiWrapper, ApiMethodCallResult, ApiMethodCallError }\r\n","import { makeObservable, observable, action, runInAction } from \"mobx\"\nimport { ApiReceiverManager } from \"../api/api\"\n\nclass ConfigStore { \n    public consumers: any = {};\n    public providers: any = {};\n    public loading = false;\n\n    constructor() {\n        makeObservable(this, {\n            providers: observable.deep,\n            consumers: observable.deep,\n            loading: observable,\n            update: action\n        })\n    }\n\n    public update() {\n        this.loading = true;\n        ApiReceiverManager.callMethod<any>(\"receiver.config.get\", {}).then((result) => {\n            runInAction(() => {\n                this.providers = result.data.providers;\n                this.consumers = result.data.consumers;\n                this.loading = false;\n            })\n        })\n    }\n\n  }\n\nexport { ConfigStore }","import React, { useState, useContext } from 'react';\r\n\r\nconst ENGLISH_MAP = {\r\n  auth: {\r\n    login: \"Login\",\r\n    password: \"Password\",\r\n    auth: \"Login\",\r\n    incorrect: \"Incorrect login or password\"\r\n  },\r\n  sidebar: {\r\n    statistics: \"Statistics\",\r\n    providers: \"Providers\",\r\n    consumers: \"Consumers\",\r\n    messages: \"Messages\",\r\n    settings: \"Settings\"\r\n  }\r\n}\r\n\r\nconst RUSSIAN_MAP = {\r\n  auth: {\r\n    login: \"Логин\",\r\n    password: \"Пароль\",\r\n    auth: \"Войти\",\r\n    incorrect: \"Неправильный логин или пароль\"\r\n  },\r\n  sidebar: {\r\n    statistics: \"Статистка\",\r\n    providers: \"Провайдеры\",\r\n    consumers: \"Получатели\",\r\n    messages: \"Сообщения\",\r\n    settings: \"Настройки\"\r\n  }\r\n}\r\n\r\n\r\nconst MAPS: any = { \"en\": [0, ENGLISH_MAP], \"ru\": [1, RUSSIAN_MAP] }\r\nconst LanguageContext = React.createContext<any>({lang: MAPS[\"en\"][1], index: MAPS[\"en\"][0], set: ()=>{}});\r\n\r\ninterface LanguageProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst LanguageProvider = (props: LanguageProviderProps) => {\r\n  const [lang, setLang] = useState<string>(\"en\");\r\n  return <LanguageContext.Provider value = {{lang: MAPS[lang][1], index: MAPS[lang][0], set: setLang}}>\r\n    {props.children}\r\n  </LanguageContext.Provider>\r\n}\r\n\r\nfunction useLanguage(): any {\r\n  const {lang, index, set} = useContext(LanguageContext);\r\n  return [lang, index, set]\r\n}\r\n\r\nexport { LanguageProvider, useLanguage }\r\n","import React from 'react';\r\nimport './loading.css';\r\n\r\ninterface LoadingAnimationProps {\r\n  hidden?: boolean;\r\n};\r\n\r\nconst LoadingAnimation: React.FunctionComponent<LoadingAnimationProps> = (props) => {\r\n  return <div className = \"loading-animation-wrapper\" style = {{display: props.hidden?\"none\":\"block\"}} ><progress className = \"progress-round\"/></div>\r\n};\r\n\r\nexport { LoadingAnimation }\r\n","import React from 'react';\r\nimport { LoadingAnimation } from \"../informs/loading\"\r\nimport './input-v2.css';\r\n\r\ninterface InputV2Props {\r\n  otherProps?: React.HTMLProps<HTMLInputElement>;\r\n\r\n  className?: string;\r\n  value?: string;\r\n  type?: string;\r\n  valid?: boolean;\r\n  placeholder?: string;\r\n  autoComplete?: string;\r\n  defaultValue?: string;\r\n  name?: string;\r\n  id?: string;\r\n  onClick?: (e?: React.MouseEvent<HTMLInputElement>) => void;\r\n  onChange?: (e?: React.ChangeEvent<HTMLInputElement>) => void;\r\n\r\n  children?: React.ReactNode;\r\n\r\n  errorLabel?: string;\r\n  loading?: boolean;\r\n}\r\n\r\nconst InputV2 = React.forwardRef<HTMLInputElement, InputV2Props>((props, ref) => {\r\n  const {type, placeholder, onClick, onChange, value, valid, autoComplete, name, id, defaultValue} = props;\r\n  const inputProps = Object.assign({\r\n    type, placeholder, onClick, onChange, value, valid: valid !== false?\"true\":\"false\", autoComplete, name, id, defaultValue\r\n  }, props.otherProps);\r\n\r\n  return <div className = {`input-v2-row ${props.className || \"\"}`}>\r\n    <input className = \"input-v2\" ref = {ref} {...inputProps}/>\r\n    {(props.children || props.loading) && <div className = \"input-v2-side-block\">\r\n      {props.loading?<LoadingAnimation/>:props.children}\r\n    </div>}\r\n    {props.valid === false && props.errorLabel && <p className = \"input-v2-error-label\">{props.errorLabel}</p>}\r\n  </div>\r\n})\r\n\r\nexport { InputV2 }\r\n","import React from 'react';\r\nimport { LoadingAnimation } from \"../informs/loading\"\r\nimport { Link } from 'react-router-dom';\r\nimport './button.css';\r\n\r\ntype ButtonProps = React.HTMLProps<HTMLElement> & {\r\n  type: string;\r\n  text: string;\r\n  loading? :boolean;\r\n  link? :string;\r\n}\r\n\r\nconst Button: React.FunctionComponent<ButtonProps> = (props) => {\r\n  if (props.link) {\r\n    return <Link to = {props.link} className = {`button button-type-${props.type}`} onClick = {props.onClick} >\r\n      {props.text}\r\n      {props.loading && <LoadingAnimation hidden = {false}/>}\r\n    </Link>;\r\n  } else {\r\n    return <div className = {`button ${props.loading?\"button-loading\":\"\"} button-type-${props.type}`} onClick = {props.onClick} >\r\n      {props.text}\r\n      {props.loading && <LoadingAnimation hidden = {false}/>}\r\n    </div>;\r\n  }\r\n};\r\n\r\nexport { Button }\r\n","import React, { useRef } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { MiniSelect } from \"../components/inputs/mini-select\"\r\nimport { InputV2 } from \"../components/inputs/input-v2\"\r\nimport { Button } from \"../components/buttons/button\"\r\n\r\nimport { ApiReceiverManager } from \"../api/api\"\r\nimport { useLanguage } from \"../utils/language-utils\"\r\n\r\nimport \"./css/auth.css\";\r\n\r\nconst PageAuth = () => {\r\n  const [language, languageId, setLanguage] = useLanguage();\r\n  const loginRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onLoginStart = () => {\r\n    const login = (loginRef as any).current.value;\r\n    const password = (passwordRef as any).current.value\r\n    ApiReceiverManager.login(login, password, false).then((result) => {\r\n      window.location.reload();\r\n    }).catch((error) => {alert()})\r\n  }\r\n\r\n  return <div className = \"page-auth\">\r\n    { ApiReceiverManager.fastCheckAuth() && <Redirect to=\"/admin\"/> }\r\n    <div className = \"auth-form-wrapper\">\r\n      <form className = \"auth-form\">\r\n        <h2>TON NOTIFICATION RECEIVER</h2>\r\n        <InputV2 ref = { loginRef } className = \"large-height montserrat-font\" placeholder = { language.auth.login }/>\r\n        <InputV2 ref = { passwordRef } className = \"large-height montserrat-font\" type = \"password\" placeholder = { language.auth.password }/>\r\n        <Button onClick = { onLoginStart } type = \"primary\" text = { language.auth.auth }/>\r\n      </form>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport { PageAuth }\r\n","import React from 'react';\nimport './sidebar.css';\n\ninterface NavigationSidebarProps {\n  isClose: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nconst NavigationSidebar: React.FunctionComponent<NavigationSidebarProps> = (props) => {\n  return <React.Fragment>\n    <div className = {`page-user-sidebar-parent sidebar-${props.isClose?\"close\":\"open\"}`} onClick = {() => props.onClose()}/>\n    <div className = {`page-user-sidebar sidebar-${props.isClose?\"close\":\"open\"}`}>\n      <div className = \"page-user-sidebar-logo\"><h2>TON NOTICES RECEIVER</h2></div>\n      { props.children }\n    </div>\n    <div className = \"page-user-sidebar sidebar-fake\"/>\n  </React.Fragment>\n}\n\nexport { NavigationSidebar }\n","import React from 'react';\r\nimport './icon.css';\r\n\r\ntype IconProps = React.HTMLProps<HTMLDivElement> &  {\r\n  otherProps?: React.HTMLProps<HTMLDivElement>;\r\n  onClick?: (e?: React.MouseEvent<HTMLDivElement>) => void;\r\n\r\n  url: string;\r\n  iconColor?: string;\r\n  iconPosition?: string;\r\n  iconSize?: string;\r\n  children?: React.ReactNode;\r\n  isHidden?: boolean;\r\n  type?: string;\r\n};\r\n\r\nconst Icon: React.FunctionComponent<IconProps> = (props) => {\r\n  const { onClick } = props;\r\n  const iconProps = Object.assign({\r\n    onClick\r\n  }, props.otherProps);\r\n\r\n  return <div {...iconProps} className = {`${!props.isHidden?\"icon\":\"icon icon-hidden\"} ${props.type}`} style = {{\r\n    backgroundColor: props.iconColor,\r\n    WebkitMaskImage: `url(${props.url})`,\r\n    WebkitMaskSize: props.iconSize,\r\n    WebkitMaskPosition: props.iconPosition\r\n  }}>{props.children}</div>\r\n};\r\n\r\nexport { Icon }\r\n","import React from 'react';\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { Icon } from \"../informs/icon\"\r\nimport './sidebar-button.css';\r\n\r\ninterface SidebarButtonProps {\r\n  icon?: string;\r\n  text: string;\r\n  subbuttons?: SidebarButtonProps[];\r\n  url?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\ninterface SidebarButtonListProps {\r\n  buttons: SidebarButtonProps[];\r\n}\r\n\r\n\r\nconst SidebarButton: React.FunctionComponent<(SidebarButtonProps)> = (props) => {\r\n  const match = useRouteMatch(props.url || \"\");\r\n\r\n  const isActive = (match && props.url);\r\n  const activeClassName: string = (match && props.url)?\"button-sidebar-active\":\"button-sidebar-inactive\"\r\n\r\n  return <div className = {`button-sidebar ${activeClassName}`}>\r\n    {props.url?\r\n      <Link draggable=\"false\" to = {props.url} className = \"button-sidebar-body\" onClick = {props.onClick}>\r\n        <Icon iconColor = {isActive?\"var(--main-primary-color)\":\"white\"} url = {props.icon || \"\"}/>\r\n        <p>{props.text}</p>\r\n      </Link>:\r\n      <div className = \"button-sidebar-body\" onClick = {props.onClick}>\r\n        <Icon iconColor = {isActive?\"var(--main-primary-color)\":\"white\"} url = {props.icon || \"\"}/>\r\n        <p>{props.text}</p>\r\n      </div>\r\n    }\r\n\r\n    <SidebarButtonList buttons = {(props.subbuttons)?(props.subbuttons):[]}/>\r\n  </div>;\r\n};\r\n\r\nconst SidebarButtonList: React.FunctionComponent<SidebarButtonListProps> = (props) => {\r\n  return <div className = \"button-sidebar-subbuttons\">{\r\n    props.buttons.map((buttonProps: SidebarButtonProps, i:number): React.ReactNode => {\r\n      return <SidebarButton key = {i} {...buttonProps}/>\r\n    })\r\n  }</div>\r\n}\r\n\r\nexport { SidebarButton, SidebarButtonList }\r\n","import React from 'react';\nimport { Icon } from \"../informs/icon\";\nimport './header.css';\n\n\ninterface HeaderProps {\n  onOpenSidebar: () => void;\n  children?: React.ReactNode;\n}\n\nconst Header = (props: HeaderProps) => {\n  return <React.Fragment>\n    <div className = \"page-user-header-fake\"/>\n    <div className = \"page-user-header\">\n      <Icon iconSize = \"45%\" url = \"/icons/menu.svg\" onClick = {props.onOpenSidebar} type = \"header-show-sidebar\"/>\n      { props.children }\n    </div>\n  </React.Fragment>\n}\n\nexport { Header }\n","import React, { useRef, useState } from 'react'\r\nimport './dropdown-container.css';\r\n\r\ninterface DropdownContainerProps {\r\n  header: React.ReactNode;\r\n  children: React.ReactNode;\r\n  hidden?: boolean;\r\n  onHeaderClick?: (e: any) => void;\r\n}\r\n\r\nconst DropdownContainer: React.FunctionComponent< DropdownContainerProps> = (props) => {\r\n  const [style, setStyle] = useState<string>(props.hidden?\"hidden\":\"showed\");\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const newStyle = props.hidden?\"hidden\":\"showed\";\r\n  if (newStyle !== style && ref !== null && ref.current !== null && ref.current.firstChild !== null) {\r\n    setStyle(newStyle);\r\n    if (props.hidden === true) {\r\n      ref.current.style.height = (ref.current.firstChild as HTMLElement).offsetHeight + \"px\";\r\n      setTimeout(() => {if (ref !== null && ref.current !== null) ref.current.style.height = \"0px\"}, 0);\r\n    } else {\r\n      ref.current.style.height = (ref.current.firstChild as HTMLElement).offsetHeight + \"px\";\r\n      setTimeout(() => {if (ref !== null && ref.current !== null) ref.current.style.height = \"\"}, 250);\r\n    }\r\n  }\r\n\r\n  return <div className = \"container-dropdown\">\r\n    <div className = \"container-dropdown-header\" onClick = {props.onHeaderClick}>\r\n      {props.header}\r\n    </div>\r\n    <div ref = {ref} className = {`container-dropdown-body dropdown-container-${style}`}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport { DropdownContainer }\r\n","import React, { useRef } from \"react\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { Icon } from \"../informs/icon\"\r\nimport \"./qrcode-container.css\"\r\n\r\ninterface QrCodeContainerProps {\r\n  value: string;\r\n  size: number;\r\n  downloadable?: boolean;\r\n}\r\n\r\nconst QrCodeContainer: React.FunctionComponent<QrCodeContainerProps> = (props) => {\r\n  const qrCodeRef = useRef<any>(null);\r\n  const startDownload = () => {\r\n    if (qrCodeRef.current === null) return;\r\n\r\n    const svgEls = qrCodeRef.current.getElementsByTagName(\"svg\");\r\n    if (svgEls.length === 0) return;\r\n\r\n    const svg = svgEls[0];\r\n    const svgCode = svg.outerHTML;\r\n    const urlData = URL.createObjectURL(new Blob([svgCode], {type: 'image/svg+xml'}));\r\n\r\n    const svgImage = document.createElement('img');\r\n    svgImage.style.position = 'absolute';\r\n    svgImage.style.top = '-9999px';\r\n    document.body.appendChild(svgImage);\r\n    svgImage.onload = () => {\r\n      const canvas = document.createElement('canvas');\r\n      canvas.width = 512; canvas.height = 512;\r\n      const canvasCtx = canvas.getContext('2d');\r\n      if (canvasCtx !== null) {\r\n        canvasCtx.drawImage(svgImage, 0, 0, svgImage.clientWidth, svgImage.clientHeight, 0, 0, 512, 512);\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const link = document.createElement('a');\r\n        link.download = 'qr-code.png';\r\n        link.href = imgData;\r\n        link.click();\r\n      }\r\n      document.body.removeChild(svgImage);\r\n    }\r\n\r\n    svgImage.src = urlData;\r\n\r\n\r\n\r\n    console.log(\"startDownload\");\r\n    console.log(qrCodeRef, urlData);\r\n  }\r\n\r\n  return <div  ref = {qrCodeRef} className = {`qr-code-container ${props.downloadable?\"downloadable\":\"\"}`} style = {{width: props.size+\"px\", height: props.size+\"px\"}}>\r\n    <QRCode value = {props.value} size = {props.size * 10}/>\r\n    <Icon iconColor = \"var(--color-1e-gray)\" iconSize = \"45%\" url = \"/icons/download.svg\" onClick = {startDownload}/>\r\n  </div>\r\n}\r\n\r\nexport { QrCodeContainer }\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { runInAction } from \"mobx\"\r\nimport { observer, inject } from \"mobx-react\"\r\n\r\nimport { Header } from \"../../components/navigation/header\"\r\nimport { DropdownContainer } from \"../../components/containers/dropdown-container\"\r\nimport { QrCodeContainer } from \"../../components/containers/qrcode-container\"\r\nimport { InputV2 } from \"../../components/inputs/input-v2\"\r\nimport { Button } from \"../../components/buttons/button\"\r\nimport { Icon } from \"../../components/informs/icon\"\r\n\r\nimport { ApiReceiverManager } from \"../../api/api\"\r\nimport './css/providers.css';\r\n\r\n/**/\r\n\r\ninterface ProviderSettingRowProps {\r\n  providerId: any;\r\n  providerSettings: any;\r\n}\r\n\r\nconst ProviderSettingRow = inject(\"configStore\")(observer((props: ProviderSettingRowProps) => {\r\n  const { configStore } = props as any;\r\n  const { providerId, providerSettings } = props;\r\n\r\n  const removeProvider = (e: any) => {\r\n    ApiReceiverManager.callMethod<any>(\"receiver.config.providers.remove\", {\r\n      provider_id: providerId\r\n    }).then(() => runInAction(() => delete configStore.providers[providerId]));\r\n    e.stopPropagation();\r\n  }\r\n\r\n  const [hidden, setHidden] = useState<boolean>(true);\r\n  const header = <div className = \"provider-info-header\">\r\n    <p>{`${providerSettings.name} (ID=${providerId})`}</p>\r\n    <div className = \"provider-info-header-icons\">\r\n      <Icon iconSize = \"55%\" url = \"/icons/remove.svg\" onClick = {removeProvider}/>\r\n      <Icon iconSize = \"55%\" url = \"/icons/down-arrow.svg\" type = {hidden?\"icon-r0\":\"icon-r180\"}/>\r\n    </div>\r\n  </div>\r\n\r\n  return <div className = \"provider-info-dropdown\">\r\n    <DropdownContainer onHeaderClick = {() => setHidden(!hidden)} hidden = { hidden } header = { header }>\r\n      <div className = \"provider-info\">\r\n        <div className = \"provider-info-info\">\r\n          <img alt = \"\" src = {`${providerSettings.url}${providerSettings.icon}`}/>\r\n          <div className = \"provider-info-block\">\r\n            <p className = \"desc\">{providerSettings.description}</p>\r\n            <p>{`url: ${providerSettings.url}`}</p>\r\n            <p>{`version: ${providerSettings.version}`}</p>\r\n            <p>{`id: ${providerId}`}</p>\r\n            <div className = \"addr\">\r\n              <p>{`address: ${providerSettings.address}`}</p>\r\n              <p>{`public key: ${providerSettings.public_key}`}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className = \"provider-info-qrcode\">\r\n            <QrCodeContainer size = {110} value = {`https://uri.ton.surf/chat/${providerSettings.address}`} />\r\n            <p>Support</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DropdownContainer>\r\n  </div>\r\n}));\r\n\r\n\r\n\r\n/**/\r\n\r\ninterface PageAdminProvidersProps { onOpenSidebar: () => void; }\r\n\r\nconst PageAdminProviders = inject(\"configStore\")(observer((props: PageAdminProvidersProps) => {\r\n  const { configStore } = props as any;\r\n\r\n  const urlRef = useRef<HTMLInputElement>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const newProviderAdd = () => {\r\n    if (loading) return;\r\n\r\n    const _providerUrl = (urlRef as any).current.value;\r\n    const providerUrl = _providerUrl[_providerUrl.length-1]===\"/\"?_providerUrl.slice(0, -1):_providerUrl\r\n\r\n    setLoading(true);\r\n    fetch(`${providerUrl}/api/info`).then((result) => result.json()).then((providerConfig) => {\r\n      if (providerConfig.id in configStore.providers) return;\r\n\r\n      return ApiReceiverManager.callMethod<any>(\"receiver.config.providers.add\", {\r\n        provider: {...providerConfig, url: providerUrl}\r\n      }).then(() => {\r\n        runInAction(() => configStore.providers[providerConfig.id] = {...providerConfig, url: providerUrl})\r\n      });\r\n    }).finally(() => setLoading(false))\r\n  }\r\n\r\n  return <React.Fragment>\r\n    <Header onOpenSidebar = {props.onOpenSidebar}/>\r\n    <div className = \"page-admin-page\">\r\n      <div className = \"page-admin-provider-list\">\r\n        \r\n        {Object.keys(configStore.providers).map((providerId, i) => {\r\n          return <ProviderSettingRow providerId = { providerId } providerSettings = {configStore.providers[providerId]} key = {i}/>\r\n        })}\r\n\r\n        <div className = \"provider-create-form\">\r\n          <div className = \"provider-settings provider-info-info\">\r\n            <div className = \"provider-settings-row\">\r\n              <p>Provider URL:</p>\r\n              <div className = \"provider-setting-input-row\">\r\n                <InputV2 ref = { urlRef } placeholder = \"Provider url\" className = \"small-height\"/>\r\n                <Button onClick = { newProviderAdd } loading = { loading } text = \"Add\" type = \"primary small-height\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </React.Fragment>\r\n}))\r\n\r\n/*        */\r\n\r\nexport { PageAdminProviders }\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { runInAction } from \"mobx\"\r\nimport { observer, inject } from \"mobx-react\"\r\n\r\nimport { Header } from \"../../components/navigation/header\"\r\nimport { DropdownContainer } from \"../../components/containers/dropdown-container\"\r\nimport { QrCodeContainer } from \"../../components/containers/qrcode-container\"\r\nimport { InputV2 } from \"../../components/inputs/input-v2\"\r\nimport { Button } from \"../../components/buttons/button\"\r\nimport { Icon } from \"../../components/informs/icon\"\r\n\r\nimport { ApiReceiverManager } from \"../../api/api\"\r\nimport './css/consumers.css';\r\n\r\n/**/\r\n\r\ninterface ConsumerSettingRuleBlockProps {\r\n  hash: string;\r\n  provider_id: string;\r\n  rule: any;\r\n}\r\n\r\nconst ConsumerSettingRuleBlock = inject(\"configStore\")(observer((props: ConsumerSettingRuleBlockProps) => {\r\n  const { configStore } = props as any;\r\n  const { provider_id, hash, rule } = props;\r\n\r\n  const [saveLoading, setSaveLoading] = useState<boolean>(false);\r\n  const [removeLoading, setRemoveLoading] = useState<boolean>(false);\r\n\r\n  const forwardRef = useRef<HTMLInputElement>(null);\r\n  const secretRef = useRef<HTMLInputElement>(null);\r\n\r\n  const updateProviderRule = () => {\r\n    const forwardHex = (forwardRef as any).current.value;\r\n    const secretHex = (secretRef as any).current.value;\r\n\r\n    setSaveLoading(true);\r\n    ApiReceiverManager.callMethod<any>(\"receiver.config.rules.update\", {\r\n      rule: {hash, provider_id, secret: secretHex, forward: forwardHex}\r\n    }).then(() => {\r\n      runInAction(() => configStore.consumers[hash].rules[provider_id] = {secret: secretHex, forward: forwardHex})\r\n    }).finally(() => setSaveLoading(false));\r\n  }\r\n\r\n  const removeProviderRule = () => {\r\n    setRemoveLoading(true);\r\n    ApiReceiverManager.callMethod<any>(\"receiver.config.rules.remove\", {\r\n      rule: {hash, provider_id}\r\n    }).then(() => {\r\n      runInAction(() => delete (configStore.consumers[hash].rules)[provider_id])\r\n    }).finally(() => setRemoveLoading(false));\r\n  }\r\n\r\n  return <React.Fragment>\r\n    <p className = \"setting-subheader\"><b>{provider_id}:</b></p>              \r\n    <div className = \"admin-setting-input-row-multiline hash provider-rule-block\">\r\n      <form autoComplete = \"off\" className = \"consumer-provider-rule\"> \r\n        <p>Secret:</p>\r\n        <InputV2 ref = { secretRef } defaultValue = {rule.secret} type = \"text\" className = \"small-height\"/>\r\n        <p>Forward url:</p>\r\n        <InputV2 ref = { forwardRef } defaultValue = {rule.forward} type = \"text\" className = \"small-height\"/>\r\n        <div className = \"rules-button\">\r\n          <Button loading = { saveLoading } onClick = {updateProviderRule} text = \"Save\" type = \"primary small-height\"/>\r\n          <Button loading = { removeLoading } onClick = {removeProviderRule} text = \"Remove\" type = \"secondary small-height\"/>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </React.Fragment>\r\n}))\r\n\r\n\r\n\r\n/**/\r\n\r\ninterface ConsumerSettingRowProps {\r\n  hash: string;\r\n  consumerSettings: any;\r\n}\r\n\r\nconst ConsumerSettingRow = inject(\"configStore\")(observer((props: ConsumerSettingRowProps) => {\r\n  const { configStore } = props as any;\r\n  const { hash, consumerSettings } = props;\r\n\r\n  const pkeyRef = useRef<HTMLInputElement>(null);\r\n  const skeyRef = useRef<HTMLInputElement>(null);\r\n\r\n  const providerSelectRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const removeConsumer = (e: any) => {\r\n    ApiReceiverManager.callMethod<any>(\"receiver.config.consumers.remove\", {\r\n      hash\r\n    }).then(() => runInAction(() => delete configStore.consumers[hash]));\r\n    e.stopPropagation();\r\n  }\r\n\r\n  const updateConsumer = (e: any) => {\r\n    const consumerPkey = (pkeyRef as any).current.value;\r\n    const consumerSkey = (skeyRef as any).current.value;\r\n    setLoading(true);\r\n    ApiReceiverManager.callMethod<any>(\"receiver.config.consumers.update\", {\r\n      consumer: {hash, public_key: consumerPkey, secret_key: consumerSkey}\r\n    }).then(() => {\r\n      runInAction(() => configStore.consumers[hash] = {rules: consumerSettings.rules, hash, public_key: consumerPkey, secret_key: consumerSkey})\r\n    }).finally(() => setLoading(false));\r\n  }\r\n\r\n  const addProviderRule = () => {\r\n    const provider_id =  (providerSelectRef as any).current.value;\r\n    \r\n    ApiReceiverManager.callMethod<any>(\"receiver.config.rules.add\", {\r\n      rule: { hash, provider_id, secret:\"\", forward:\"localhost:8924\"}\r\n    }).then(() => runInAction(() => configStore.consumers[hash].rules[provider_id] = {secret:\"\", forward:\"localhost:8924\"}));\r\n  }\r\n\r\n  const [hidden, setHidden] = useState<boolean>(false);\r\n  const header = <div className = \"provider-info-header\">\r\n    <p>{`${hash.slice(0, 12)}.......${hash.slice(-12)}`}</p>\r\n    <div className = \"provider-info-header-icons\">\r\n      <Icon iconSize = \"55%\" url = \"/icons/remove.svg\" onClick = {removeConsumer}/>\r\n      <Icon iconSize = \"55%\" url = \"/icons/down-arrow.svg\" type = {hidden?\"icon-r0\":\"icon-r180\"}/>\r\n    </div>\r\n  </div>\r\n\r\n  return <div className = \"provider-info-dropdown\">\r\n    <DropdownContainer onHeaderClick = {() => setHidden(!hidden)} hidden = { hidden } header = { header }>\r\n\r\n      <div className = \"consumer-info\">\r\n        <div className = \"admin-settings-row consumer-data\">\r\n          <p><b>Hash: </b>{hash}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className = \"consumer-info\">\r\n        <div className = \"admin-settings-row\">\r\n          <p className = \"setting-header\"><b>Consumer settings:</b></p>\r\n          <div className = \"admin-setting-input-row-multiline hash\">\r\n            <form autoComplete = \"off\" className = \"consumer-provider-rule\"> \r\n              <p>Encryption public key:</p>\r\n              <InputV2 ref = { pkeyRef } type = \"text\" defaultValue = {consumerSettings.public_key} className = \"small-height\"/>\r\n              <p>Decryption secret key:</p>\r\n              <InputV2 ref = { skeyRef } type = \"text\" defaultValue = {consumerSettings.secret_key} className = \"small-height\"/>\r\n              <Button onClick = { updateConsumer } loading = { loading } text = \"Save\" type = \"primary small-height\"/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className = \"consumer-info\">\r\n        <div className = \"admin-settings-row\">\r\n          <p className = \"setting-header\"><b>Rules:</b></p>\r\n          <div className = \"consumer-info-rules-list\">\r\n            {\r\n              Object.keys(consumerSettings.rules).map((providerId: string, i: number) => {\r\n                return <ConsumerSettingRuleBlock key = {i} rule = { consumerSettings.rules[providerId] } hash = { hash} provider_id = { providerId }/>\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className = \"consumer-info\">\r\n        <div className = \"admin-settings-row\">\r\n          <p>Add provider rule:</p>\r\n          <div className = \"admin-setting-input-row-multiline hash\">\r\n            <form autoComplete = \"off\" className = \"add-provider-to-consumer\"> \r\n              <select ref = { providerSelectRef }>\r\n                {Object.keys(configStore.providers).map((providerId, i) => {\r\n                  return <option value = {providerId} key = {i}>{providerId}</option>\r\n                })}\r\n              </select>\r\n              <Button  onClick = {addProviderRule} loading = { loading } text = \"Add\" type = \"primary small-height\"/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DropdownContainer>\r\n  </div>\r\n}));\r\n\r\n/* <p className = \"rule-status\">Status: <b>Active</b></p> */\r\n\r\n\r\n/**/\r\n\r\ninterface PageAdminConsumersProps { onOpenSidebar: () => void; }\r\n\r\nconst PageAdminConsumers = inject(\"configStore\")(observer((props: PageAdminConsumersProps) => {\r\n  const { configStore } = props as any;\r\n\r\n  const hashRef = useRef<HTMLInputElement>(null);\r\n  const pkeyRef = useRef<HTMLInputElement>(null);\r\n  const skeyRef = useRef<HTMLInputElement>(null);\r\n  \r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const newConsumerAdd = () => {\r\n    if (loading) return;\r\n\r\n    const consumerHash = (hashRef as any).current.value;\r\n    const consumerPkey = (pkeyRef as any).current.value;\r\n    const consumerSkey = (skeyRef as any).current.value;\r\n    setLoading(true);\r\n\r\n    ApiReceiverManager.callMethod<any>(\"receiver.config.consumers.add\", {\r\n      consumer: {hash: consumerHash, public_key: consumerPkey, secret_key: consumerSkey}\r\n    }).then(() => {\r\n      runInAction(() => configStore.consumers[consumerHash] = {rules: {}, hash: consumerHash, public_key: consumerPkey, secret_key: consumerSkey})\r\n    }).finally(() => setLoading(false));\r\n  }\r\n\r\n  return <React.Fragment>\r\n    <Header onOpenSidebar = {props.onOpenSidebar}/>\r\n    <div className = \"page-admin-page\">\r\n      <div className = \"page-admin-provider-list\">\r\n        {Object.keys(configStore.consumers).map((hash, i) => {\r\n          return <ConsumerSettingRow hash = {hash} consumerSettings = {configStore.consumers[hash]} key = {i}/>\r\n        })}\r\n        <div className = \"consumer-create-form\">\r\n          <div className = \"admin-settings-row\">\r\n            <p>Add Consumer:</p>\r\n            <div className = \"admin-setting-input-row-multiline hash\">\r\n              <form autoComplete = \"off\"> \r\n                <InputV2 ref = { hashRef } placeholder = \"Hash\" type = \"text\" className = \"small-height\"/>\r\n                <InputV2 ref = { pkeyRef } placeholder = \"Public encryption key\" type = \"text\" className = \"small-height\"/>\r\n                <InputV2 ref = { skeyRef } placeholder = \"Secret decryption key\" type = \"text\" className = \"small-height\"/>\r\n                <Button onClick = { newConsumerAdd } loading = { loading } text = \"Add\" type = \"primary small-height\"/>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </React.Fragment>\r\n}))\r\n\r\n/*        */\r\n\r\nexport { PageAdminConsumers }\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { runInAction } from \"mobx\"\r\nimport { observer, inject } from \"mobx-react\"\r\n\r\nimport { Header } from \"../../components/navigation/header\"\r\nimport { InputV2 } from \"../../components/inputs/input-v2\"\r\nimport { Button } from \"../../components/buttons/button\"\r\n\r\nimport { ApiReceiverManager } from \"../../api/api\"\r\nimport './css/settings.css';\r\n\r\n/* */\r\n\r\ninterface PageAdminSettingsAuthProps {  }\r\n\r\nconst PageAdminSettingsAuth = (props: PageAdminSettingsAuthProps) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const newLoginRef = useRef<HTMLInputElement>(null);\r\n  const newPasswordRef = useRef<HTMLInputElement>(null);\r\n  const oldPasswordRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onPasswordChange = () => {\r\n    if (loading) return;\r\n\r\n    const new_login = (newLoginRef as any).current.value;\r\n    const new_password = (newPasswordRef as any).current.value;\r\n    const old_password = (oldPasswordRef as any).current.value;\r\n\r\n    setLoading(true);\r\n    ApiReceiverManager.callMethod<any>(\"admin.auth.change\", {\r\n      new_login, new_password, old_password\r\n    }).then((result) => {\r\n      ApiReceiverManager.setAccessToken(result.data.token);\r\n      alert(\"success\")\r\n    }).catch(() => {\r\n      alert(\"401\")\r\n    }).finally(() => setLoading(false));\r\n  }\r\n\r\n  return <div className = \"admin-settings-row\">\r\n    <p>Change login and password:</p>\r\n    <div className = \"admin-setting-input-row-multiline\">\r\n      <form autoComplete = \"off\"> \r\n        <InputV2 ref = { newLoginRef } placeholder = \"New login\" className = \"small-height\"/>\r\n        <InputV2 ref = { newPasswordRef } placeholder = \"New password\" type = \"password\" className = \"small-height\"/>\r\n        <InputV2 ref = { oldPasswordRef } placeholder = \"Old password\" type = \"password\" className = \"small-height\"/>\r\n        <Button loading = { loading } onClick = { onPasswordChange } text = \"Change\" type = \"primary small-height\"/>\r\n      </form>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\n/* */\r\n\r\ninterface PageAdminSettingsProps { onOpenSidebar: () => void; }\r\n\r\nconst PageAdminSettings = inject(\"configStore\")(observer((props: PageAdminSettingsProps) => {\r\n  return <React.Fragment>\r\n    <Header onOpenSidebar = {props.onOpenSidebar}/>\r\n    <div className = \"page-admin-page\">\r\n      <div className = \"page-admin-block\">\r\n        <PageAdminSettingsAuth/>\r\n      </div>\r\n    </div>\r\n  </React.Fragment>\r\n}));\r\n\r\nexport { PageAdminSettings }\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { runInAction } from \"mobx\"\r\nimport { observer, inject } from \"mobx-react\"\r\n\r\nimport { Header } from \"../../components/navigation/header\"\r\nimport { InputV2 } from \"../../components/inputs/input-v2\"\r\nimport { Button } from \"../../components/buttons/button\"\r\n\r\nimport { ApiReceiverManager } from \"../../api/api\"\r\nimport './css/messages.css';\r\n\r\n\r\n\r\n/* */\r\n\r\ninterface PageAdminMessagesProps { onOpenSidebar: () => void; }\r\n\r\nconst PageAdminMessages = inject(\"configStore\")(observer((props: PageAdminMessagesProps) => {\r\n  const [messages, setMessages] = useState<any>([]);\r\n\r\n  useEffect(() => {\r\n    ApiReceiverManager.callMethod<any>(\"receiver.messages.get\", {}).then((result) => {\r\n      setMessages(result.data);\r\n    });\r\n  }, []);\r\n\r\n  return <React.Fragment>\r\n    <Header onOpenSidebar = {props.onOpenSidebar}/>\r\n    <div className = \"page-admin-page\">\r\n      <div className = \"page-admin-provider-list\">\r\n        {messages.map((message: any, i: number) => {\r\n          return <div className = \"message-block\" key = {i}>\r\n\r\n            <p><b>Date: </b>{(new Date(message.date * 1000)).toString()}</p>\r\n            <p><b>Consumer: </b>{message.user}</p>\r\n            <p><b>Provider: </b>{message.provider}</p>\r\n            <hr/>\r\n            <p><b>From: </b>{message.notification.src}</p>\r\n            <p><b>To: </b>{message.notification.dst}</p>\r\n            <p><b>Value: </b>{message.notification.value_dec}</p>\r\n            <hr/>\r\n\r\n            <p className = \"message-json\">{JSON.stringify(message,  null, '\\t')}</p>\r\n          </div>\r\n        })}\r\n      </div>\r\n    </div>\r\n  </React.Fragment>\r\n}));\r\n\r\nexport { PageAdminMessages }\r\n","import { useState, useEffect } from \"react\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\"\r\n\r\nimport { NavigationSidebar }  from \"../components/navigation/sidebar\"\r\nimport { SidebarButtonList }  from \"../components/navigation/sidebar-button\"\r\nimport { ApiReceiverManager } from \"../api/api\"\r\n\r\nimport { PageAdminProviders } from \"./admin/providers\"\r\nimport { PageAdminConsumers } from \"./admin/consumers\"\r\nimport { PageAdminSettings } from \"./admin/settings\"\r\nimport { PageAdminMessages } from \"./admin/messages\"\r\n\r\nimport { useLanguage } from \"../utils/language-utils\"\r\nimport \"./css/admin.css\";\r\n\r\n\r\nconst PageAdmin = inject(\"configStore\")(observer((props: any) => {\r\n  const { configStore } = props as any;\r\n\r\n  const [language, languageId, setLanguage] = useLanguage();\r\n  const [close, setClose] = useState<boolean>(true);\r\n  useEffect(() => {ApiReceiverManager.checkAuth().then((res) => {if (res) configStore.update()})}, []);\r\n\r\n  return <div className = \"page-admin\">\r\n    <NavigationSidebar onClose = {() => setClose(true)} isClose = {close}>\r\n      <div className = \"page-admin-sidebar-buttons\">\r\n        <SidebarButtonList buttons = {[\r\n          {text: language.sidebar.providers,  icon: \"/icons/sidebar/services.svg\",  url:\"/admin/providers\", onClick:()=>setClose(true)},\r\n          {text: language.sidebar.consumers,  icon: \"/icons/sidebar/services.svg\",  url:\"/admin/consumers\", onClick:()=>setClose(true)},\r\n          {text: language.sidebar.messages,   icon: \"/icons/sidebar/messages.svg\",  url:\"/admin/messages\", onClick:()=>setClose(true)},\r\n          {text: language.sidebar.settings,   icon: \"/icons/sidebar/settings.svg\",  url:\"/admin/settings\", onClick:()=>setClose(true)},\r\n        ]}/>\r\n      </div>\r\n    </NavigationSidebar>\r\n    <div className = \"page-admin-body\">\r\n      <Switch>\r\n        { (!ApiReceiverManager.fastCheckAuth()) && <Redirect to=\"/auth\"/> }\r\n        <Route path=\"/admin/statistics\" render = {() => <PageAdminProviders onOpenSidebar = {() => setClose(false)}/>}/>\r\n        <Route path=\"/admin/providers\" render = {() => <PageAdminProviders onOpenSidebar = {() => setClose(false)}/>}/>\r\n        <Route path=\"/admin/consumers\" render = {() => <PageAdminConsumers onOpenSidebar = {() => setClose(false)}/>}/>\r\n        <Route path=\"/admin/messages\" render = {() => <PageAdminMessages onOpenSidebar = {() => setClose(false)}/>}/>\r\n        <Route path=\"/admin/settings\" render = {() => <PageAdminSettings onOpenSidebar = {() => setClose(false)}/>}/>\r\n        <Redirect from = \"/admin\" to = \"/admin/providers\"/>\r\n      </Switch>\r\n    </div>\r\n  </div>\r\n}));\r\n\r\nexport { PageAdmin }\r\n","import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { PageAuth } from \"./pages/auth\";\r\nimport { PageAdmin } from \"./pages/admin\";\r\n\r\nconst App = () => {\r\n  return <React.Fragment>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path = \"/auth\"   component = { PageAuth }/>\r\n        <Route path = \"/admin\"  component = { PageAdmin }/>\r\n        <Redirect from = \"/\" to = \"/auth\"/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </React.Fragment>\r\n}\r\n\r\nexport { App }\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"mobx-react\"\r\n\r\nimport { ConfigStore } from \"./stores/config-store\"\r\nimport { LanguageProvider } from \"./utils/language-utils\"\r\nimport { App } from './app';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"./index.css\"\r\n\r\nconst stores = {\r\n  configStore: new ConfigStore()\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider {...stores}>\r\n      <LanguageProvider>\r\n        <App/>\r\n      </LanguageProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}